{"version":3,"sources":["NotablesCard.tsx","AllNotables.tsx","AllJewels.tsx","SingleNotable.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Wrapper","styled","Link","display","padding","gridGap","gridTemplateAreas","backgroundColor","textDecoration","transition","gridTemplateColumns","gridTemplateRows","alignItems","borderRadius","TextContainer","div","alignSelf","color","gridColumn","gridRow","Title","h3","fontSize","lineHeight","margin","Description","p","Spacer","flexGrow","MetaInfo","fontStyle","IconImg","img","isKeystone","isSmall","width","height","IconBorder","position","content","top","left","right","bottom","border","mixBlendMode","zIndex","Icon","icon","src","process","NotableCard","notable","name","stats","skill","reminderText","flavourText","weight","totalWeight","showReminder","to","map","text","key","t","toFixed","Container","maxHeight","columns","columnGap","borderRight","Input","input","background","outline","InputWrapper","borderBottom","Clear","button","cursor","flexDirection","transform","marginLeft","NotableWrapper","breakInside","pageBreakInside","WebkitColumnBreakInside","marginBottom","More","textAlign","formattedNotables","Notables","n","item","List","React","memo","term","fuse","useRef","Fuse","threshold","distance","includeScore","keys","current","result","search","rest","length","single","slice","AllNotables","initialValue","split","reduce","acc","s","getParams","useLocation","useState","setTerm","debouncedTerm","setDebouncedTerm","hist","useHistory","bounce","useEffect","window","clearTimeout","setTimeout","replace","onChange","value","target","type","placeholder","onClick","Name","marginRight","overflow","whiteSpace","textOverflow","Size","OuterWrapper","NotablesContainer","marginTop","JewelHeader","maxWidth","justifyItems","expanded","AffixHeader","NotablesChunk","notables","tag","SingleJewel","jewel","size","enchant","prefixWeight","suffixWeight","setExpanded","sortedNotables","sort","a","b","find","filter","undefined","prefixNotables","suffixNotables","e","AllJewels","jewels","overflowY","overflowX","CardWrapper","Notable","id","useParams","parseInt","appearsOn","some","TabsContainer","Tab","shouldForwardProp","prop","isActive","Tabs","location","useRouteMatch","params","console","log","pathname","App","path","SingleNotable","exact","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"i6xDAKMA,EAAUC,YAAOC,IAAPD,CAAa,CAC3BE,QAAS,OACTC,QAAS,MACTC,QAAS,MACTC,kBAAmB,GACnBC,gBAAiB,OACjBC,eAAgB,OAChBC,WAAY,wBACZ,SAAU,CACRF,gBAAiB,WAEnBG,oBAAqB,kBACrBC,iBAAkB,kBAClBC,WAAY,MACZC,aAAc,QAGVC,EAAgBb,IAAOc,IAAI,CAC/BC,UAAW,QACXb,QAAS,OACTE,QAAS,MACTY,MAAO,QACPC,WAAY,OACZC,QAAS,SAGLC,EAAQnB,IAAOoB,GAAG,CACtBC,SAAU,OACVC,WAAY,OACZC,OAAQ,YAGJC,EAAcxB,IAAOyB,EAAE,CAC3BJ,SAAU,OACVC,WAAY,OACZC,OAAQ,IAGJG,EAAS1B,IAAOc,IAAI,CAAEa,SAAU,IAEhCC,EAAW5B,YAAOwB,EAAPxB,CAAoB,CACnCgB,MAAO,OACPa,UAAW,WAGPC,EAAU9B,IAAO+B,IAIrB,CACE7B,QAAS,UAEX,gBAAG8B,EAAH,EAAGA,WAAYC,EAAf,EAAeA,QAAf,MAA8B,CAC5BC,OAAQF,EAAc,OAAYC,GAAW,SAAW,OACxDE,QAASH,EAAc,OAAYC,GAAW,SAAW,WAIvDG,EAAapC,IAAOc,IAAI,CAC5BuB,SAAU,WACV/B,gBAAiB,OACjB,SAAU,CACRJ,QAAS,QACToC,QAAS,KACTD,SAAU,WACVE,IAAK,EACLC,KAAM,EACNC,MAAO,EACPC,OAAQ,EACRC,OAAQ,qCACRC,aAAc,UACdC,OAAQ,KAICC,EAAO,SAAC,GAAD,IAClBb,EADkB,EAClBA,QACAD,EAFkB,EAElBA,WACAe,EAHkB,EAGlBA,KAHkB,OASlB,kBAACX,EAAD,KACE,kBAACN,EAAD,CACEG,QAASA,EACTD,WAAYA,EACZgB,IAAG,UAAKC,gBAAL,OAA8BF,OA2CxBG,EAtCK,SAAC,GAAD,QAClBC,QACEC,EAFgB,EAEhBA,KACAC,EAHgB,EAGhBA,MACAN,EAJgB,EAIhBA,KACAf,EALgB,EAKhBA,WACAsB,EANgB,EAMhBA,MANgB,IAOhBC,oBAPgB,MAOD,GAPC,MAQhBC,mBARgB,MAQF,GARE,EAUlBC,EAVkB,EAUlBA,OAVkB,IAWlBC,mBAXkB,MAWJ,EAXI,EAYlBC,EAZkB,EAYlBA,aAZkB,OAmBlB,kBAAC5D,EAAD,CAAS6D,GAAE,mBAAcN,IACvB,kBAAC,EAAD,CAAMP,KAAMA,EAAMf,WAAYA,IAC9B,kBAACnB,EAAD,KACE,kBAACM,EAAD,KAAQiC,GACPC,EAAMQ,KAAI,SAACC,GAAD,OACT,kBAACtC,EAAD,CAAauC,IAAKD,GAAOA,MAE1BH,GAAgB,kBAACjC,EAAD,MAChBiC,GACC,sBAAIJ,GAAJ,YAAqBC,IAAaK,KAAI,SAACG,GAAD,OACpC,kBAACpC,EAAD,CAAUmC,IAAKC,GAAIA,OAGxBP,GACC,kBAAC7B,EAAD,MAAa6B,EAASC,EAAe,KAAKO,QAAQ,GAAlD,O,wBC3HAC,EAAYlE,IAAOc,IAA0B,CACjDqD,UAAW,iBACXC,QAAS,UACTC,UAAW,MACXlE,QAAS,QACT,sBAAuB,CACrB+B,MAAO,OACPoC,YAAa,kBAEf,4BAA6B,CAC3BA,YAAa,oBAIXC,EAAQvE,IAAOwE,MAAM,CACzBrE,QAAS,YACTkB,SAAU,OACVM,SAAU,EACVgB,OAAQ,OACR8B,WAAY,OACZzD,MAAO,OACP,SAAU,CACR0D,QAAS,UAIPC,EAAe3E,IAAOc,IAAI,CAC9BZ,QAAS,OACTS,WAAY,SACZ0B,SAAU,SACVE,IAAK,OACLM,OAAQ,EACR+B,aAAc,mBAGVC,EAAQ7E,IAAO8E,OAAO,CAC1B,SAAU,CAAEJ,QAAS,QACrBK,OAAQ,UACRN,WAAY,OACZ9B,OAAQ,OACRxC,QAAS,gBACTgC,OAAQ,OACRE,SAAU,WACVI,MAAO,EACPvC,QAAS,OACT8E,cAAe,cACfrE,WAAY,SACZ,kBAAmB,CACjB2B,QAAQ,KACRpC,QAAS,QACTgC,MAAO,MACPC,OAAQ,OACRsC,WAAY,OACZQ,UAAW,iBACXrE,aAAc,MACdsE,WAAY,QAEd,UAAW,CAAED,UAAW,qBAGpBE,EAAiBnF,IAAOc,IAAI,CAChCZ,QAAS,eACTgC,MAAO,OACPkD,YAAa,eACbC,gBAAiB,QACjBC,wBAAyB,QACzBC,aAAc,QAGVC,EAAOxF,IAAOc,IAAI,CACtBE,MAAO,QACPyE,UAAW,SACXtF,QAAS,SAGLuF,EAAqBC,EAA2B9B,KAAI,SAAC+B,GAAD,MAAQ,CAAEC,KAAMD,MAapEE,EAAOC,IAAMC,MACjB,YAAiC,IAA9BC,EAA6B,EAA7BA,KACgBC,EAASC,iBACxB,IAAIC,IAAKT,EAA2B,CAClCU,UAAW,IACXC,SAAU,IACVC,cAAc,EACdC,KAAM,CACJ,CACEpD,KAAM,QACNK,OAAQ,IAEV,CACEL,KAAM,OACNK,OAAQ,QAZRgD,QAkBFC,EAAST,EAAOC,EAAKS,OAAOV,GAAQP,EAEpCkB,EAAOF,EAAOG,OAjCJ,GAmChB,OACE,oCACE,kBAAC3C,EAAD,CAAW4C,OAA0B,IAAlBJ,EAAOG,QACvBH,EAAOK,MAAM,EAtCJ,IAsCoBlD,KAAI,gBAASV,EAAT,EAAG0C,KAAH,OAChC,kBAACV,EAAD,CAAgBpB,IAAKZ,EAAQG,OAC3B,kBAAC,EAAD,CAAaH,QAASA,SAI3ByD,EAAO,GAAK,kBAACpB,EAAD,KAAOoB,EAAP,4CAInB,uBAAGX,OAAH,EAAuBA,QAwCVe,EArCK,WAAO,IAErBC,EAnDY,SAACN,GAAD,OAChBA,EACGI,MAAM,GACNG,MAAM,KACNC,QACC,SAACC,EAAKC,GAAN,sBAAkBD,EAAlB,eAAwBC,EAAEH,MAAM,KAAK,GAAKG,EAAEH,MAAM,KAAK,KAAM,MAC7D,IA6CeI,CADAC,cAAXZ,QAC6BU,EACrCJ,EAAuC,kBAAjBA,EAA4BA,EAAe,GAHzC,MAIAO,mBAASP,GAJT,mBAIjBhB,EAJiB,KAIXwB,EAJW,OAKkBD,mBAASP,GAL3B,mBAKjBS,EALiB,KAKFC,EALE,KAMlBC,EAAOC,cAEPC,EAAS3B,mBAaf,OAXA4B,qBAAU,WAQR,OAPI9B,IAASyB,IACXM,OAAOC,aAAaH,EAAOrB,SAC3BqB,EAAOrB,QAAUuB,OAAOE,YAAW,WACjCN,EAAKO,QAAQlC,EAAI,aAASA,GAAS,IACnC0B,EAAiB1B,KAChB,MAEE,kBAAM+B,OAAOC,aAAaH,EAAOrB,YACvC,CAACR,EAAM2B,EAAMF,IAGd,oCACE,kBAAC/C,EAAD,KACE,kBAACJ,EAAD,CACE6D,SAAU,gBAAaC,EAAb,EAAGC,OAAUD,MAAb,OAA2BZ,EAAQY,IAC7CA,MAAOpC,EACPsC,KAAK,OACLC,YAAY,0CAEbvC,GAAQ,kBAACpB,EAAD,CAAO4D,QAAS,kBAAMhB,EAAQ,QAEzC,kBAAC3B,EAAD,CAAMG,KAAMyB,M,QCjKZxD,EAAYlE,IAAOc,IAAI,CAC3BZ,QAAS,OACTE,QAAS,MACTK,oBAAqB,SAGjBiI,EAAO1I,IAAOc,IAAI,CACtBE,MAAO,OACPM,WAAY,OACZD,SAAU,OACV6D,WAAY,MACZyD,YAAa,MACbC,SAAU,SACVC,WAAY,SACZC,aAAc,aAGVC,EAAO/I,IAAOc,IAAI,CACtBE,MAAO,OACPM,WAAY,OACZD,SAAU,OACV6D,WAAY,SAGR8D,EAAehJ,IAAOc,IAAI,CAC9BZ,QAAS,OACT8E,cAAe,SACf9C,MAAO,OACP0G,SAAU,SACVzI,QAAS,SAGL8I,EAAoBjJ,IAAOc,IAAI,CACnCsD,QAAS,UACTC,UAAW,MACX6E,UAAW,SAGP/D,EAAiBnF,IAAOc,IAAI,CAChCZ,QAAS,eACTgC,MAAO,OACPkD,YAAa,eACbC,gBAAiB,QACjBC,wBAAyB,QACzB4D,UAAW,QAGPC,EAAcnJ,IAAO8E,OACzB,CACEzC,SAAU,WACVM,OAAQ,OACRzC,QAAS,OACTkJ,SAAU,OACV3I,oBAAqB,0CACrB4I,aAAc,QACd1I,WAAY,SACZoE,OAAQ,UACR5E,QAAS,MACTsE,WAAY,OACZ,SAAU,CAAEC,QAAS,QACrB,SAAU,CACRpC,QAAQ,KACRpC,QAAS,QACTgF,WAAY,OACZyD,YAAa,MACbzG,MAAO,EACPC,OAAQ,EACRQ,OAAQ,wBACR2B,YAAa,iBACbM,aAAc,oBAGlB,gBAAG0E,EAAH,EAAGA,SAAH,MAAmB,CACjB,SAAU,CACRrE,UAAU,WAAD,OAAaqE,EAAW,MAAQ,KAAhC,QACTJ,UAAWI,EAAW,MAAQ,YAK9BC,EAAcvJ,IAAOc,IAAI,CAC7BX,QAAS,UACTsE,WAAY,OACZzD,MAAO,YACPa,UAAW,SACXR,SAAU,OACVnB,QAAS,OACTE,QAAS,QAGLoJ,EAAgB,SAAC,GAAD,IACpBC,EADoB,EACpBA,SACAhG,EAFoB,EAEpBA,OACAiG,EAHoB,EAGpBA,IAHoB,OASpB,oCACE,kBAACH,EAAD,KAAcE,EAAS,GAAGlB,MAC1B,kBAACU,EAAD,KACGQ,EAAS5F,KACR,SAACV,GAAD,aACEA,GACE,kBAAC,EAAD,CAAgBY,IAAKZ,EAAQG,OAC3B,kBAAC,EAAD,CACEG,OAAM,UAAEN,EAAQM,cAAV,aAAE,EAAiBiG,GACzBhG,YAAaD,EACbN,QAASA,WASZwG,EAAc,SAAC,GAarB,IAAD,IAZJC,MACEC,EAWE,EAXFA,KACAzG,EAUE,EAVFA,KACAL,EASE,EATFA,KASE,IARF0G,gBAQE,MARS,GAQT,EAPFK,EAOE,EAPFA,QACAJ,EAME,EANFA,IACAK,EAKE,EALFA,aACAC,EAIE,EAJFA,aAIE,EAC4BxC,oBAAS,GADrC,mBACG8B,EADH,KACaW,EADb,KAGEC,EAAiBT,EACpBU,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAE5G,OAAS2G,EAAE3G,UAC5BI,KAAI,gBAAGP,EAAH,EAAGA,MAAH,OACFqC,EAA2B2E,MAAK,SAAC1E,GAAD,OAAOA,EAAEtC,QAAUA,QAErDiH,QAAO,SAAC3E,GAAD,YAA+B4E,IAAN5E,KAE7B6E,EAAiBP,EAAeK,QAAO,kBAAuB,WAAvB,EAAGhC,QAC1CmC,EAAiBR,EAAeK,QAAO,kBAAuB,WAAvB,EAAGhC,QAEhD,OACE,oCACE,kBAACY,EAAD,CAAaV,QAAS,kBAAMwB,GAAaX,IAAWA,SAAUA,GAC5D,kBAAC,EAAD,CAAMrH,SAAO,EAACc,KAAMA,IACpB,kBAAC2F,EAAD,KAAOtF,GACP,kBAAC2F,EAAD,KAAOc,IAERP,GACC,kBAACC,EAAD,KACGO,EAAQjG,KAAI,SAAC8G,GAAD,OACX,0BAAM5G,IAAK4G,GAAIA,OAIpBrB,GAAYmB,EAAe5D,OAAS,GACnC,kBAAC,EAAD,CACEpD,OAAQsG,EACRL,IAAKA,EACLD,SAAUgB,IAGbnB,GAAYoB,EAAe7D,OAAS,GACnC,kBAAC,EAAD,CACEpD,OAAQuG,EACRN,IAAKA,EACLD,SAAUiB,MAmBLE,EAZG,kBAChB,kBAAC5B,EAAD,KACE,kBAAC,EAAD,KACI6B,EACCN,QAAO,qBAAGd,SAAwB5C,UAClChD,KAAI,SAAC+F,GAAD,OACH,kBAAC,EAAD,CAAa7F,IAAK6F,EAAMxG,KAAMwG,MAAOA,UCpLzC1F,EAAYlE,IAAOc,IAAI,CAC3BZ,QAAS,OACTO,oBAAqB,MACrBL,QAAS,MACT0K,UAAW,OACXC,UAAW,SACX,sBAAuB,CACrB7I,MAAO,OACPoC,YAAa,kBAEf,4BAA6B,CAC3BA,YAAa,kBAEfnE,QAAS,cAGL6I,EAAehJ,IAAOc,IAAI,CAC9BZ,QAAS,OACT8E,cAAe,SACf9C,MAAO,OACP0G,SAAU,WAGNoC,EAAchL,IAAOc,IAAI,CAC7BuB,SAAU,SACVE,IAAK,OACLM,OAAQ,EACR+B,aAAc,mBAgCDqG,EA7BC,WAAO,IACbC,EAAOC,cAAPD,GACF5H,EAAsB,kBAAP4H,EAAkBE,SAASF,EAAI,IAAM,EAEpD/H,EAAWsG,EAA2Ba,MAC1C,qBAAGhH,QAA+BA,KAG9B+H,EAAaR,EAAuBN,QAAO,qBAAGd,SACzC6B,MAAK,qBAAGhI,QAA+BA,QAGlD,OAAOH,EACL,oCACE,kBAAC6H,EAAD,KACE,kBAAC,EAAD,CAAarH,cAAY,EAACI,IAAKZ,EAAQG,MAAOH,QAASA,KAEzD,kBAAC,EAAD,KACE,kBAAC,EAAD,KACGkI,GACCA,EAAUxH,KAAI,SAAC+F,GAAD,OACZ,kBAAC,EAAD,CAAa7F,IAAK6F,EAAMxG,KAAMwG,MAAOA,UAK7C,MClDA2B,EAAgBvL,IAAOc,IAAI,CAC/BZ,QAAS,OACTmC,SAAU,SACVE,IAAK,EACLM,OAAQ,EACRvC,gBAAiB,OACjB6B,OAAQ,SAGJqJ,EAAMxL,YAAOC,IAAM,CAAEwL,kBAAmB,SAACC,GAAD,MAAmB,aAATA,IAA5C1L,CAGV,CACE2I,YAAa,MACbpI,eAAgB,OAChBJ,QAAS,MACT0C,OAAQ,IAEV,gBAAG8I,EAAH,EAAGA,SAAH,MAAmB,CACjBrL,gBAAiBqL,EAAW,SAAW,OACvC3K,MAAO2K,EAAW,OAAS,aAIzBC,GAAO,WAAO,IAAD,EACXC,EAAWtE,cACX2D,EAAE,UAAGY,YAA8B,uBAAjC,aAAG,EAA+CC,OAAOb,GAGjE,OAFAc,QAAQC,IAAIf,GAGV,kBAACK,EAAD,KACE,kBAACC,EAAD,CAAK5H,GAAG,IAAI+H,SAAgC,MAAtBE,EAASK,UAA/B,gBAGA,kBAACV,EAAD,CAAK5H,GAAG,UAAU+H,SAAgC,YAAtBE,EAASK,UAArC,oBAyBSC,GAlBH,kBACV,kBAAC,IAAD,KACE,kBAAC,GAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,gBACV,kBAACC,EAAD,OAEF,kBAAC,IAAD,CAAOD,KAAK,WACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOE,OAAK,EAACF,KAAK,KAChB,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAUxI,GAAG,SCzDC2I,QACW,cAA7BvE,OAAO6D,SAASW,UAEe,UAA7BxE,OAAO6D,SAASW,UAEhBxE,OAAO6D,SAASW,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,GAAD,MAASC,SAASC,eAAe,SDqI3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLrB,QAAQqB,MAAMA,EAAMC,a","file":"static/js/main.fd0eb2c2.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"@emotion/styled\";\nimport { Link } from \"react-router-dom\";\nimport { NotableType } from \"./types\";\n\nconst Wrapper = styled(Link)({\n  display: \"grid\",\n  padding: \"8px\",\n  gridGap: \"8px\",\n  gridTemplateAreas: \"\",\n  backgroundColor: \"#111\",\n  textDecoration: \"none\",\n  transition: \"background-color 0.3s\",\n  \":hover\": {\n    backgroundColor: \"#1A1A1A\",\n  },\n  gridTemplateColumns: \"min-content 1fr\",\n  gridTemplateRows: \"min-content 1fr\",\n  alignItems: \"end\",\n  borderRadius: \"2px\",\n});\n\nconst TextContainer = styled.div({\n  alignSelf: \"start\",\n  display: \"grid\",\n  gridGap: \"4px\",\n  color: \"white\",\n  gridColumn: \"2/-1\",\n  gridRow: \"1/-1\",\n});\n\nconst Title = styled.h3({\n  fontSize: \"16px\",\n  lineHeight: \"12px\",\n  margin: \"0 0 4px\",\n});\n\nconst Description = styled.p({\n  fontSize: \"12px\",\n  lineHeight: \"16px\",\n  margin: 0,\n});\n\nconst Spacer = styled.div({ flexGrow: 1 });\n\nconst MetaInfo = styled(Description)({\n  color: \"#666\",\n  fontStyle: \"italic\",\n});\n\nconst IconImg = styled.img<{\n  isSmall?: boolean;\n  isKeystone?: boolean;\n}>(\n  {\n    display: \"block\",\n  },\n  ({ isKeystone, isSmall }) => ({\n    width: (isKeystone && \"53px\") || (isSmall && \"27px\") || \"38px\",\n    height: (isKeystone && \"54px\") || (isSmall && \"27px\") || \"38px\",\n  })\n);\n\nconst IconBorder = styled.div({\n  position: \"relative\",\n  backgroundColor: \"#222\",\n  \":after\": {\n    display: \"block\",\n    content: '\"\"',\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    border: \"1px solid rgba(255, 255, 255, 0.5)\",\n    mixBlendMode: \"overlay\",\n    zIndex: 2,\n  },\n});\n\nexport const Icon = ({\n  isSmall,\n  isKeystone,\n  icon,\n}: {\n  isSmall?: boolean;\n  isKeystone?: boolean;\n  icon: string;\n}) => (\n  <IconBorder>\n    <IconImg\n      isSmall={isSmall}\n      isKeystone={isKeystone}\n      src={`${process.env.PUBLIC_URL}${icon}`}\n    />\n  </IconBorder>\n);\n\nconst NotableCard = ({\n  notable: {\n    name,\n    stats,\n    icon,\n    isKeystone,\n    skill,\n    reminderText = [],\n    flavourText = [],\n  },\n  weight,\n  totalWeight = 1,\n  showReminder,\n}: {\n  notable: NotableType;\n  weight?: number;\n  totalWeight?: number;\n  showReminder?: boolean;\n}) => (\n  <Wrapper to={`/notable/${skill}`}>\n    <Icon icon={icon} isKeystone={isKeystone} />\n    <TextContainer>\n      <Title>{name}</Title>\n      {stats.map((text) => (\n        <Description key={text}>{text}</Description>\n      ))}\n      {showReminder && <Spacer />}\n      {showReminder &&\n        [...reminderText, ...flavourText].map((t) => (\n          <MetaInfo key={t}>{t}</MetaInfo>\n        ))}\n    </TextContainer>\n    {weight && (\n      <MetaInfo>{((weight / totalWeight) * 100).toFixed(2)}%</MetaInfo>\n    )}\n  </Wrapper>\n);\n\nexport default NotableCard;\n","import React, { useState, useRef, useEffect } from \"react\";\nimport styled from \"@emotion/styled\";\nimport Notables from \"./notables.json\";\nimport NotableCard from \"./NotablesCard\";\nimport Fuse from \"fuse.js\";\nimport { useLocation, useHistory } from \"react-router-dom\";\nimport { NotableType } from \"./types\";\n\nconst Container = styled.div<{ single?: boolean }>({\n  maxHeight: \"calc(100vh - )\",\n  columns: \"300px 5\",\n  columnGap: \"8px\",\n  padding: \"0 8px\",\n  \"::-webkit-scrollbar\": {\n    width: \"16px\",\n    borderRight: \"8px solid #111\",\n  },\n  \"::-webkit-scrollbar-thumb\": {\n    borderRight: \"8px solid #222\",\n  },\n});\n\nconst Input = styled.input({\n  padding: \"12px 16px\",\n  fontSize: \"16px\",\n  flexGrow: 1,\n  border: \"none\",\n  background: \"#111\",\n  color: \"#fff\",\n  \":focus\": {\n    outline: \"none\",\n  },\n});\n\nconst InputWrapper = styled.div({\n  display: \"flex\",\n  alignItems: \"center\",\n  position: \"sticky\",\n  top: \"40px\",\n  zIndex: 9,\n  borderBottom: \"8px solid #222\",\n});\n\nconst Clear = styled.button({\n  \":focus\": { outline: \"none\" },\n  cursor: \"pointer\",\n  background: \"none\",\n  border: \"none\",\n  padding: \"0 24px 0 27px\",\n  height: \"100%\",\n  position: \"absolute\",\n  right: 0,\n  display: \"flex\",\n  flexDirection: \"row-reverse\",\n  alignItems: \"center\",\n  \":after, :before\": {\n    content: `\"\"`,\n    display: \"block\",\n    width: \"3px\",\n    height: \"24px\",\n    background: \"#777\",\n    transform: \"rotateZ(45deg)\",\n    borderRadius: \"2px\",\n    marginLeft: \"-3px\",\n  },\n  \":before\": { transform: \"rotateZ(-45deg)\" },\n});\n\nconst NotableWrapper = styled.div({\n  display: \"inline-block\",\n  width: \"100%\",\n  breakInside: \"avoid-column\",\n  pageBreakInside: \"avoid\",\n  WebkitColumnBreakInside: \"avoid\",\n  marginBottom: \"8px\",\n});\n\nconst More = styled.div({\n  color: \"white\",\n  textAlign: \"center\",\n  padding: \"16px\",\n});\n\nconst formattedNotables = (Notables as NotableType[]).map((n) => ({ item: n }));\n\nconst maxNotables = 50;\n\nconst getParams = (search: string) =>\n  search\n    .slice(1)\n    .split(\"&\")\n    .reduce<{ [x: string]: boolean | string }>(\n      (acc, s) => ({ ...acc, [s.split(\"=\")[0]]: s.split(\"=\")[1] || true }),\n      {}\n    );\n\nconst List = React.memo(\n  ({ term }: { term: string }) => {\n    const { current: fuse } = useRef(\n      new Fuse(Notables as NotableType[], {\n        threshold: 0.15,\n        distance: 1000,\n        includeScore: true,\n        keys: [\n          {\n            name: \"stats\",\n            weight: 0.5,\n          },\n          {\n            name: \"name\",\n            weight: 0.5,\n          },\n        ],\n      })\n    );\n\n    const result = term ? fuse.search(term) : formattedNotables;\n\n    const rest = result.length - maxNotables;\n\n    return (\n      <>\n        <Container single={result.length === 1}>\n          {result.slice(0, maxNotables).map(({ item: notable }) => (\n            <NotableWrapper key={notable.skill}>\n              <NotableCard notable={notable} />\n            </NotableWrapper>\n          ))}\n        </Container>\n        {rest > 0 && <More>{rest} notables hidden, refine your search</More>}\n      </>\n    );\n  },\n  ({ term: prevTerm }, { term }) => prevTerm === term\n);\n\nconst AllNotables = () => {\n  const { search } = useLocation();\n  let initialValue = getParams(search).s;\n  initialValue = typeof initialValue === \"string\" ? initialValue : \"\";\n  const [term, setTerm] = useState(initialValue);\n  const [debouncedTerm, setDebouncedTerm] = useState(initialValue);\n  const hist = useHistory();\n\n  const bounce = useRef<number>();\n\n  useEffect(() => {\n    if (term !== debouncedTerm) {\n      window.clearTimeout(bounce.current);\n      bounce.current = window.setTimeout(() => {\n        hist.replace(term ? `?s=${term}` : \"\");\n        setDebouncedTerm(term);\n      }, 250);\n    }\n    return () => window.clearTimeout(bounce.current);\n  }, [term, hist, debouncedTerm]);\n\n  return (\n    <>\n      <InputWrapper>\n        <Input\n          onChange={({ target: { value } }) => setTerm(value)}\n          value={term}\n          type=\"text\"\n          placeholder=\"Search notable name or description...\"\n        />\n        {term && <Clear onClick={() => setTerm(\"\")} />}\n      </InputWrapper>\n      <List term={debouncedTerm} />\n    </>\n  );\n};\n\nexport default AllNotables;\n","import React, { useState } from \"react\";\nimport styled from \"@emotion/styled\";\nimport jewels from \"./jewels.json\";\nimport Notables from \"./notables.json\";\nimport NotableCard, { Icon } from \"./NotablesCard\";\nimport { JewelType, NotableType } from \"./types\";\n\nconst Container = styled.div({\n  display: \"grid\",\n  gridGap: \"8px\",\n  gridTemplateColumns: \"100%\",\n});\n\nconst Name = styled.div({\n  color: \"#fff\",\n  lineHeight: \"18px\",\n  fontSize: \"14px\",\n  marginLeft: \"8px\",\n  marginRight: \"8px\",\n  overflow: \"hidden\",\n  whiteSpace: \"nowrap\",\n  textOverflow: \"ellipsis\",\n});\n\nconst Size = styled.div({\n  color: \"#fff\",\n  lineHeight: \"18px\",\n  fontSize: \"14px\",\n  marginLeft: \"auto\",\n});\n\nconst OuterWrapper = styled.div({\n  display: \"flex\",\n  flexDirection: \"column\",\n  width: \"100%\",\n  overflow: \"hidden\",\n  padding: \"16px\",\n});\n\nconst NotablesContainer = styled.div({\n  columns: \"300px 5\",\n  columnGap: \"8px\",\n  marginTop: \"-8px\",\n});\n\nconst NotableWrapper = styled.div({\n  display: \"inline-block\",\n  width: \"100%\",\n  breakInside: \"avoid-column\",\n  pageBreakInside: \"avoid\",\n  WebkitColumnBreakInside: \"avoid\",\n  marginTop: \"8px\",\n});\n\nconst JewelHeader = styled.button<{ expanded?: boolean }>(\n  {\n    position: \"relative\",\n    border: \"none\",\n    display: \"flex\",\n    maxWidth: \"100%\",\n    gridTemplateColumns: \"min-content 1fr min-content min-content\",\n    justifyItems: \"start\",\n    alignItems: \"center\",\n    cursor: \"pointer\",\n    padding: \"4px\",\n    background: \"#111\",\n    \":focus\": { outline: \"none\" },\n    \":after\": {\n      content: `\"\"`,\n      display: \"block\",\n      marginLeft: \"12px\",\n      marginRight: \"8px\",\n      width: 0,\n      height: 0,\n      border: \"4px solid transparent\",\n      borderRight: \"4px solid #555\",\n      borderBottom: \"4px solid #555\",\n    },\n  },\n  ({ expanded }) => ({\n    \":after\": {\n      transform: `rotateZ(${expanded ? \"225\" : \"45\"}deg)`,\n      marginTop: expanded ? \"3px\" : \"-5px\",\n    },\n  })\n);\n\nconst AffixHeader = styled.div({\n  padding: \"4px 8px\",\n  background: \"#111\",\n  color: \"lightblue\",\n  fontStyle: \"italic\",\n  fontSize: \"14px\",\n  display: \"grid\",\n  gridGap: \"4px\",\n});\n\nconst NotablesChunk = ({\n  notables,\n  weight,\n  tag,\n}: {\n  notables: NotableType[];\n  weight: number;\n  tag: string;\n}) => (\n  <>\n    <AffixHeader>{notables[0].type}</AffixHeader>\n    <NotablesContainer>\n      {notables.map(\n        (notable) =>\n          notable && (\n            <NotableWrapper key={notable.skill}>\n              <NotableCard\n                weight={notable.weight?.[tag]}\n                totalWeight={weight}\n                notable={notable}\n              />\n            </NotableWrapper>\n          )\n      )}\n    </NotablesContainer>\n  </>\n);\n\nexport const SingleJewel = ({\n  jewel: {\n    size,\n    name,\n    icon,\n    notables = [],\n    enchant,\n    tag,\n    prefixWeight,\n    suffixWeight,\n  },\n}: {\n  jewel: JewelType;\n}) => {\n  const [expanded, setExpanded] = useState(false);\n\n  const sortedNotables = notables\n    .sort((a, b) => b.weight - a.weight)\n    .map(({ skill }) =>\n      (Notables as NotableType[]).find((n) => n.skill === skill)\n    )\n    .filter((n): n is NotableType => n !== undefined);\n\n  const prefixNotables = sortedNotables.filter(({ type }) => type === \"Prefix\");\n  const suffixNotables = sortedNotables.filter(({ type }) => type === \"Suffix\");\n\n  return (\n    <>\n      <JewelHeader onClick={() => setExpanded(!expanded)} expanded={expanded}>\n        <Icon isSmall icon={icon} />\n        <Name>{name}</Name>\n        <Size>{size}</Size>\n      </JewelHeader>\n      {expanded && (\n        <AffixHeader>\n          {enchant.map((e) => (\n            <span key={e}>{e}</span>\n          ))}\n        </AffixHeader>\n      )}\n      {expanded && prefixNotables.length > 0 && (\n        <NotablesChunk\n          weight={prefixWeight}\n          tag={tag}\n          notables={prefixNotables}\n        />\n      )}\n      {expanded && suffixNotables.length > 0 && (\n        <NotablesChunk\n          weight={suffixWeight}\n          tag={tag}\n          notables={suffixNotables}\n        />\n      )}\n    </>\n  );\n};\n\nconst AllJewels = () => (\n  <OuterWrapper>\n    <Container>\n      {(jewels as JewelType[])\n        .filter(({ notables }) => notables.length)\n        .map((jewel) => (\n          <SingleJewel key={jewel.name} jewel={jewel} />\n        ))}\n    </Container>\n  </OuterWrapper>\n);\n\nexport default AllJewels;\n","import React from \"react\";\nimport styled from \"@emotion/styled\";\nimport { useParams } from \"react-router-dom\";\nimport notables from \"./notables.json\";\nimport jewels from \"./jewels.json\";\nimport { SingleJewel } from \"./AllJewels\";\nimport NotableCard from \"./NotablesCard\";\nimport { NotableType, JewelType } from \"./types\";\n\nconst Container = styled.div({\n  display: \"grid\",\n  gridTemplateColumns: \"1fr\",\n  gridGap: \"8px\",\n  overflowY: \"auto\",\n  overflowX: \"hidden\",\n  \"::-webkit-scrollbar\": {\n    width: \"16px\",\n    borderRight: \"8px solid #111\",\n  },\n  \"::-webkit-scrollbar-thumb\": {\n    borderRight: \"8px solid #222\",\n  },\n  padding: \"0 8px 8px\",\n});\n\nconst OuterWrapper = styled.div({\n  display: \"flex\",\n  flexDirection: \"column\",\n  width: \"100%\",\n  overflow: \"hidden\",\n});\n\nconst CardWrapper = styled.div({\n  position: \"sticky\",\n  top: \"40px\",\n  zIndex: 9,\n  borderBottom: \"8px solid #222\",\n});\n\nconst Notable = () => {\n  const { id } = useParams();\n  const skill = typeof id === \"string\" ? parseInt(id, 10) : 0;\n\n  const notable = (notables as NotableType[]).find(\n    ({ skill: nskill }) => nskill === skill\n  );\n\n  const appearsOn = (jewels as JewelType[]).filter(({ notables }) =>\n    notables.some(({ skill: nskill }) => nskill === skill)\n  );\n\n  return notable ? (\n    <>\n      <CardWrapper>\n        <NotableCard showReminder key={notable.skill} notable={notable} />\n      </CardWrapper>\n      <OuterWrapper>\n        <Container>\n          {appearsOn &&\n            appearsOn.map((jewel) => (\n              <SingleJewel key={jewel.name} jewel={jewel} />\n            ))}\n        </Container>\n      </OuterWrapper>\n    </>\n  ) : null;\n};\n\nexport default Notable;\n","import React from \"react\";\nimport styled from \"@emotion/styled\";\nimport AllNotables from \"./AllNotables\";\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect,\n  useLocation,\n  useRouteMatch,\n} from \"react-router-dom\";\nimport AllJewels from \"./AllJewels\";\nimport SingleNotable from \"./SingleNotable\";\n\nconst TabsContainer = styled.div({\n  display: \"flex\",\n  position: \"sticky\",\n  top: 0,\n  zIndex: 9,\n  backgroundColor: \"#000\",\n  height: \"40px\",\n});\n\nconst Tab = styled(Link, { shouldForwardProp: (prop) => prop !== \"isActive\" })<{\n  isActive: Boolean;\n}>(\n  {\n    marginRight: \"4px\",\n    textDecoration: \"none\",\n    padding: \"8px\",\n    zIndex: 1,\n  },\n  ({ isActive }) => ({\n    backgroundColor: isActive ? \"orange\" : \"#000\",\n    color: isActive ? \"#000\" : \"orange\",\n  })\n);\n\nconst Tabs = () => {\n  const location = useLocation();\n  const id = useRouteMatch<{ id: string }>(\"/notable/:id\")?.params.id;\n  console.log(id);\n\n  return (\n    <TabsContainer>\n      <Tab to=\"/\" isActive={location.pathname === \"/\"}>\n        All notables\n      </Tab>\n      <Tab to=\"/jewels\" isActive={location.pathname === \"/jewels\"}>\n        Cluster jewels\n      </Tab>\n    </TabsContainer>\n  );\n};\n\nconst App = () => (\n  <Router>\n    <Tabs />\n    <Switch>\n      <Route path=\"/notable/:id\">\n        <SingleNotable />\n      </Route>\n      <Route path=\"/jewels\">\n        <AllJewels />\n      </Route>\n      <Route exact path=\"/\">\n        <AllNotables />\n      </Route>\n      <Redirect to=\"/\" />\n    </Switch>\n  </Router>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}